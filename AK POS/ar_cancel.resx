<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFUAAABVCAYAAAA49ahaAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABINJREFUeF7tkEGOIzkMBPf/n+5lG3VQhbiK4lJy++AAcgQwkixP/xP8vDMk64zp
        kt08meubuTwVknXGdMlunsz1zVyeCsk6Y7pkN0/m+mYuT4VknTFdspsnc31zHu7E7tMzhvXNd8nuxzsP
        d2L36RnD+ua7ZPfjnYc7sfv0jGF9812y+/HOw53YfXrGsL75Ltn9eOfhCL2FmO9i96veQjIf7zwcobcQ
        813sftVbSObjnYcj9BZivovdr3oLyXy883CE3kLMd7H7VW8hmY93Ho7QW0jVM13sHr2FZD7eeThCbyFV
        z3Sxe/QWkvl45+EIvYVUPdPF7tFbSObjnYcj9BZS9UwXu0dvIZmPdx6O0FuI+SrVe9ant5DMxzsPR+gt
        xHyV6j3r01tI5uOdhyP0FmK+SvWe9ektJPPxzsMRegsxX6V6z/r0FpL5eOfhTqr32a+GmO+S3Y93Hu6k
        ep/9aoj5Ltn9eOfhTqr32a+GmO+S3Y93Hu6kep/9aoj5Ltn9eO/D0yHv9qdzfTOXp0Le7U/n+mYuT4W8
        25/O9c1cngp5tz+d1zdf//4h2Y9awT7zCXz/qAf4/lEP8P2jHiB+x/pH0TMk66xCqp4h5on16ZmrMw9H
        6BmSdVYhVc8Q88T69MzVmYcj9AzJOquQqmeIeWJ9eubqzMMReoZknVVI1TPEPLE+PXN1cvlfIeaN6j77
        1RjVfkbs3Y9YiHmjus9+NUa1nxF79yMWYt6o7rNfjVHtZ8Te/YiFmDeq++xXY1T7Gf9vqwB/JFOlu2/w
        PkMy//2jAt5nSOa/f1TA+wzJ/PePCnifIZmPdx6OmCfWr3qLke108oTorZfME+tXvcXIdjp5QvTWS+aJ
        9aveYmQ7nTwheusl88T6VW8xsp1OnhC9+tKI7Xe9Ud0/3f8levWlEdvveqO6f7r/S/TqSyO23/VGdf90
        /5fo1ZdGbL/rjer+6f4v9f/FZvijGWKe7O7TM6/O698/JPthY4h5srtPz7w6r3//kOyHjSHmye4+PfPq
        vP79Q7IfNoaYJ7v79MzVyeWpkKq3GNY3/4TYux85HVL1FsP65p8Qe/cjp0Oq3mJY3/wTYu9+5HRI1VsM
        65t/Quz1j6yw+11fhfcYknXGZMTcSx3sftdX4T2GZJ0xGTH3Uge73/VVeI8hWWdMRsy91MHud30V3mNI
        1hmTEfN1id5CzJNuv5sq2X6883CE3kLMk26/myrZfrzzcITeQsyTbr+bKtl+vPNwhN5CzJNuv5sq2X68
        83CE3kKqniHmCfu7kxHzdYneQqqeIeYJ+7uTEfN1id5Cqp4h5gn7u5MR83WJ3kKqniHmCfu7kxHzdYne
        Qj7NMyeIu+uP0FvIp3nmBHF3/RF6C/k0z5wg7q4/Qm8hn+aZE8Tdsx+p3mefMaxvnlg/8/HOw51U77PP
        GNY3T6yf+Xjn4U6q99lnDOubJ9bPfLzzcCfV++wzhvXNE+tnPt778HRI15PT/SfEnfvR0yFdT073nxB3
        7kdPh3Q9Od1/Qty5Hz0d0vXkdP8Je658Gfj5+RfgPR/VYjQeEgAAAABJRU5ErkJggg==
</value>
  </data>
</root>